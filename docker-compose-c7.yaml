services:
  camundaEngine:
    image: moritz148/measurementsgmt:c7-engine-test
#    image: moritz148/camunda7experiment:engine
    container_name: camundaEngine
    restart: "unless-stopped"
#    ports:
#     - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-fs", "http://localhost:8080/engine-rest/engine"]
#      test: ["CMD-SHELL", "sleep 15 && curl -fs http://camundaEngine:8080/engine-rest/engine || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 10
      start_period: 60s
#    environment:
#      DB_DRIVER: org.postgresql.Driver
#      DB_URL: jdbc:postgresql://db:5432/camunda
#      DB_USERNAME: camunda
#      DB_PASSWORD: camunda
#    depends_on:
#      db:
#        condition: service_healthy
    networks:
      - camunda-platform

#  db:
#    image: postgres:17
#    container_name: postgres-camunda
#    restart: "unless-stopped"
#    environment:
#      POSTGRES_PASSWORD: camunda
#      POSTGRES_USER: camunda
#      POSTGRES_DB: camunda
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U camunda -d camunda || exit 1" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
##    ports:
##      - "5432:5432"
##    volumes:
##      - postgres_data:/var/lib/postgresql/data
#    networks:
#      - camunda-platform

  experiment:
    container_name: experiment
    image: moritz148/measurementsgmt:c7-benchmark
#    command: /bin/sh
    environment:
      CAMUNDA_ENGINE_URL: http://camundaEngine:8080/engine-rest
      PROCESS_INSTANCES: 100
    restart: "no"
    depends_on:
      camundaEngine:
        condition: service_healthy
    networks:
      - camunda-platform

networks:
  camunda-platform:

#volumes:
#  postgres_data: