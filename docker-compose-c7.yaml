services:
  camundaEngine:
    image: moritz148/measurementsgmt:c7-engine
#    image: moritz148/camunda7experiment:engine
    container_name: camundaEngine
    restart: "no"
#    ports:
#     - "8080:8080"
    environment:
      DB_DRIVER: org.postgresql.Driver
      DB_URL: jdbc:postgresql://db:5432/camunda
      DB_USERNAME: camunda
      DB_PASSWORD: camunda
    healthcheck:
#      test: ["CMD", "curl", "-fs", "http://camundaEngine:8080/engine-rest/engine"]

#      test: [ "CMD-SHELL", "sleep 15 && timeout 5 bash -c '</dev/tcp/127.0.0.1/8080' || exit 1" ]
      test: ["CMD-SHELL", "sleep 15 && curl -fs http://camundaEngine:8080/engine-rest/engine || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 60s
    depends_on:
      db:
        condition: service_healthy
    networks:
      - camunda-platform

  db:
    image: postgres:17
    container_name: postgres-camunda
    restart: "unless-stopped"
    environment:
      POSTGRES_PASSWORD: camunda
      POSTGRES_USER: camunda
      POSTGRES_DB: camunda
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U camunda -d camunda || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
    networks:
      - camunda-platform

  experiment:
    container_name: experiment
    image: moritz148/measurementsgmt:c7-benchmark
#    command: /bin/sh
    environment:
      CAMUNDA_ENGINE_URL: http://camundaEngine:8080/engine-rest
      PROCESS_INSTANCES: 100
    restart: "no"
    depends_on:
      camundaEngine:
        condition: service_healthy
    networks:
      - camunda-platform

networks:
  camunda-platform:
    driver: bridge

#volumes:
#  postgres_data: